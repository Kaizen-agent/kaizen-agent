"use strict";(self.webpackChunkkaizen_agent_docs=self.webpackChunkkaizen_agent_docs||[]).push([[517],{8324:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"github","title":"GitHub Integration Guide","description":"Learn how to set up GitHub integration with Kaizen Agent to automatically create pull requests with fixes and improvements.","source":"@site/docs/github.md","sourceDirName":".","slug":"/github","permalink":"/kaizen-agent/docs/github","draft":false,"unlisted":false,"editUrl":"https://github.com/Kaizen-agent/kaizen-agent/tree/main/kaizen-agent-docs/docs/github.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Usage Guide","permalink":"/kaizen-agent/docs/usage"},"next":{"title":"Examples","permalink":"/kaizen-agent/docs/examples"}}');var s=i(4848),r=i(8453);const o={},a="GitHub Integration Guide",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create GitHub Personal Access Token",id:"step-1-create-github-personal-access-token",level:2},{value:"Generate a New Token",id:"generate-a-new-token",level:3},{value:"Token Permissions Explained",id:"token-permissions-explained",level:3},{value:"Step 2: Set Up Environment Variables",id:"step-2-set-up-environment-variables",level:2},{value:"Option 1: Using .env File (Recommended)",id:"option-1-using-env-file-recommended",level:3},{value:"Option 2: Set Environment Variables Directly",id:"option-2-set-environment-variables-directly",level:3},{value:"Option 3: Using Kaizen Setup Commands",id:"option-3-using-kaizen-setup-commands",level:3},{value:"Step 3: Test GitHub Access",id:"step-3-test-github-access",level:2},{value:"Example Output",id:"example-output",level:3},{value:"Step 4: Run Tests with PR Creation",id:"step-4-run-tests-with-pr-creation",level:2},{value:"What Happens During PR Creation",id:"what-happens-during-pr-creation",level:3},{value:"GitHub Commands Reference",id:"github-commands-reference",level:2},{value:"Test GitHub Access",id:"test-github-access",level:3},{value:"Diagnose GitHub Access Issues",id:"diagnose-github-access-issues",level:3},{value:"Run Tests with PR Creation",id:"run-tests-with-pr-creation",level:3},{value:"Pull Request Details",id:"pull-request-details",level:2},{value:"PR Title Format",id:"pr-title-format",level:3},{value:"PR Description",id:"pr-description",level:3},{value:"Example PR Description",id:"example-pr-description",level:3},{value:"Branch Naming Convention",id:"branch-naming-convention",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Review PRs Before Merging",id:"1-review-prs-before-merging",level:3},{value:"2. Use Descriptive Commit Messages",id:"2-use-descriptive-commit-messages",level:3},{value:"3. Set Up Branch Protection",id:"3-set-up-branch-protection",level:3},{value:"4. Monitor PR Activity",id:"4-monitor-pr-activity",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"1. Token Permission Errors",id:"1-token-permission-errors",level:4},{value:"2. Repository Access Denied",id:"2-repository-access-denied",level:4},{value:"3. Branch Creation Failed",id:"3-branch-creation-failed",level:4},{value:"4. Pull Request Creation Failed",id:"4-pull-request-creation-failed",level:4},{value:"Debug Mode",id:"debug-mode",level:3},{value:"Getting Help",id:"getting-help",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Token Security",id:"token-security",level:3},{value:"Repository Security",id:"repository-security",level:3},{value:"Integration with CI/CD",id:"integration-with-cicd",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"github-integration-guide",children:"GitHub Integration Guide"})}),"\n",(0,s.jsx)(n.p,{children:"Learn how to set up GitHub integration with Kaizen Agent to automatically create pull requests with fixes and improvements."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Kaizen Agent can automatically create pull requests with fixes and improvements to your code. This is especially useful for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Automated code improvements"})," without manual intervention"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Team collaboration"})," through pull request reviews"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Version control integration"})," for tracking changes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CI/CD pipeline integration"})," for automated testing and fixing"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before setting up GitHub integration, you need:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GitHub account"})," with access to the repository"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Personal Access Token"})," with appropriate permissions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Repository access"})," (either as owner, collaborator, or with write permissions)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-1-create-github-personal-access-token",children:"Step 1: Create GitHub Personal Access Token"}),"\n",(0,s.jsx)(n.h3,{id:"generate-a-new-token",children:"Generate a New Token"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Go to ",(0,s.jsx)(n.a,{href:"https://github.com/settings/tokens",children:"GitHub Settings > Developer settings > Personal access tokens"})]}),"\n",(0,s.jsx)(n.li,{children:'Click "Generate new token (classic)"'}),"\n",(0,s.jsx)(n.li,{children:'Give it a descriptive name (e.g., "Kaizen AutoFix")'}),"\n",(0,s.jsx)(n.li,{children:"Set an appropriate expiration date"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Important"}),": Select these scopes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"repo"})," (Full control of private repositories)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"workflow"})," (if you want to trigger GitHub Actions)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"token-permissions-explained",children:"Token Permissions Explained"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Permission"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"Required"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"repo"})}),(0,s.jsx)(n.td,{children:"Full control of private repositories"}),(0,s.jsx)(n.td,{children:"\u2705 Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"workflow"})}),(0,s.jsx)(n.td,{children:"Trigger GitHub Actions workflows"}),(0,s.jsx)(n.td,{children:"Optional"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"write:packages"})}),(0,s.jsx)(n.td,{children:"Publish packages to GitHub Package Registry"}),(0,s.jsx)(n.td,{children:"Optional"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Security Note"}),": The ",(0,s.jsx)(n.code,{children:"repo"})," scope provides full access to your repositories. For production use, consider creating a dedicated GitHub App with more granular permissions."]}),"\n",(0,s.jsx)(n.h2,{id:"step-2-set-up-environment-variables",children:"Step 2: Set Up Environment Variables"}),"\n",(0,s.jsx)(n.h3,{id:"option-1-using-env-file-recommended",children:"Option 1: Using .env File (Recommended)"}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:".env"})," file in your project root:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Create .env file\ncat > .env << EOF\nGOOGLE_API_KEY=your_google_api_key_here\nGITHUB_TOKEN=ghp_your_github_token_here\nEOF\n"})}),"\n",(0,s.jsx)(n.h3,{id:"option-2-set-environment-variables-directly",children:"Option 2: Set Environment Variables Directly"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Set environment variables in your shell\nexport GOOGLE_API_KEY="your_google_api_key_here"\nexport GITHUB_TOKEN="ghp_your_github_token_here"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"option-3-using-kaizen-setup-commands",children:"Option 3: Using Kaizen Setup Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Create environment example file\nkaizen setup create-env-example\n\n# Check environment setup\nkaizen setup check-env\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-3-test-github-access",children:"Step 3: Test GitHub Access"}),"\n",(0,s.jsx)(n.p,{children:"Before running tests with PR creation, verify your GitHub setup:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Test GitHub access\nkaizen test-github-access --repo your-username/your-repo-name\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command will:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify your GitHub token is valid"}),"\n",(0,s.jsx)(n.li,{children:"Check repository access permissions"}),"\n",(0,s.jsx)(n.li,{children:"Test branch creation capabilities"}),"\n",(0,s.jsx)(n.li,{children:"Validate pull request creation permissions"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-output",children:"Example Output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u2705 GitHub access test successful!\n\u2705 Token is valid and has required permissions\n\u2705 Repository access confirmed: your-username/your-repo-name\n\u2705 Can create branches and pull requests\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-4-run-tests-with-pr-creation",children:"Step 4: Run Tests with PR Creation"}),"\n",(0,s.jsx)(n.p,{children:"Once GitHub access is confirmed, you can run tests with automatic PR creation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Run tests with auto-fix and create PR\nkaizen test-all --config kaizen.yaml --auto-fix --create-pr --repo your-username/your-repo-name\n"})}),"\n",(0,s.jsx)(n.h3,{id:"what-happens-during-pr-creation",children:"What Happens During PR Creation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Run tests"})," with your configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Identify issues"})," in your agent code or prompts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Generate fixes"})," using AI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Create a new branch"})," with the fixes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Commit changes"})," with descriptive messages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Create a pull request"})," with:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Descriptive title and description"}),"\n",(0,s.jsx)(n.li,{children:"List of changes made"}),"\n",(0,s.jsx)(n.li,{children:"Before/after comparisons"}),"\n",(0,s.jsx)(n.li,{children:"Test results summary"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"github-commands-reference",children:"GitHub Commands Reference"}),"\n",(0,s.jsx)(n.h3,{id:"test-github-access",children:"Test GitHub Access"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kaizen test-github-access --repo owner/repo-name\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Options:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--repo"}),": GitHub repository in format ",(0,s.jsx)(n.code,{children:"owner/repo-name"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--token"}),": Override GitHub token (optional)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"diagnose-github-access-issues",children:"Diagnose GitHub Access Issues"}),"\n",(0,s.jsx)(n.p,{children:"If you encounter problems with GitHub access:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kaizen diagnose-github-access --repo owner/repo-name\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command provides detailed diagnostics including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Token validation"}),"\n",(0,s.jsx)(n.li,{children:"Repository permissions"}),"\n",(0,s.jsx)(n.li,{children:"Branch creation capabilities"}),"\n",(0,s.jsx)(n.li,{children:"Pull request permissions"}),"\n",(0,s.jsx)(n.li,{children:"Suggested fixes for common issues"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"run-tests-with-pr-creation",children:"Run Tests with PR Creation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kaizen test-all --config kaizen.yaml --auto-fix --create-pr --repo owner/repo-name\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Required Options:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--config"}),": Path to your YAML configuration file"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--auto-fix"}),": Enable automatic fixing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--create-pr"}),": Create pull request with fixes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--repo"}),": GitHub repository for PR creation"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Optional Options:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--save-logs"}),": Save detailed execution logs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--debug"}),": Enable debug mode for more verbose output"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pull-request-details",children:"Pull Request Details"}),"\n",(0,s.jsx)(n.h3,{id:"pr-title-format",children:"PR Title Format"}),"\n",(0,s.jsx)(n.p,{children:"Kaizen Agent creates pull requests with descriptive titles:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\ud83e\udd16 Auto-fix: Improve EmailAgent prompts and error handling\n\nGenerated by Kaizen Agent test run on 2024-01-15\n"})}),"\n",(0,s.jsx)(n.h3,{id:"pr-description",children:"PR Description"}),"\n",(0,s.jsx)(n.p,{children:"Each pull request includes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Summary"})," of changes made"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test results"})," showing improvements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Before/after comparisons"})," of key metrics"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Files modified"})," with brief descriptions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test configuration"})," used for the run"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-pr-description",children:"Example PR Description"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"This Pull Request introduces fixes identified and implemented by the **Kaizen AutoFix Agent (v1.0.0)**, an automated code fixing agent using LLM-based analysis.\n\n## Summary\n\nThis PR addresses critical issues identified in the email generation functionality, specifically concerning adherence to output format constraints. Previously, the system failed to produce only the email draft, often including additional explanatory text. The changes in this PR ensure that the output strictly contains only the improved email draft, resolving all previously failing test cases. As a result, all relevant tests now pass, significantly improving the reliability and compliance of the email generation feature.\n\n| Test Case | Baseline | Attempt 1 | Attempt 2 | Final Status | Improvement |\n|---|---|---|---|---|---|\n| Basic Email Improvement | failed | passed | passed | passed | Yes |\n| Too casual input | failed | passed | passed | passed | Yes |\n\n## Detailed Results\n\n### Baseline (Before Fixes)\n**Status:** failed\n\n**Test Case:** Basic Email Improvement\n- **Input:** Can you help me improve this email: Dear John, I want to meet tomorrow to discuss the project. Thanks, Jane\n- **Expected Output:** N/A\n- **Actual Output:** Here's an improved version of the email draft, focusing on professionalism, clarity, and etiquette:\n\n---\n\n**Subject: Meeting Request: [Project Name] Discussion - [Your Name]**\n\nDear John,\n\nI hope this email finds you well.\n\nI would like to schedule a brief meeting tomorrow, [Insert Tomorrow's Date, e.g., Tuesday, October 26th], to discuss the [Project Name] project. I believe it would be beneficial to align on the current status and next steps.\n\nPlease let me know what time works best for you tomorrow. I am generally available [mention a broad availability window, e.g., \"in the morning between 9:00 AM and 12:00 PM\" or \"after 1:00 PM\"].\n\nIf tomorrow doesn't suit your schedule, please suggest an alternative time that works for you later this week.\n\nThank you for your time and consideration.\n\nBest regards,\n\nJane\n\n---\n\n**Key Improvements and Why:**\n\n1.  **Subject Line:**\n    *   `Meeting Request:`: Clearly states the purpose of the email upfront.\n    *   `[Project Name] Discussion`: Specifics the topic, so John knows what the meeting is about immediately.\n    *   `- [Your Name]`: Helps John quickly identify who the email is from, especially if he receives many emails.\n\n2.  **Professional Salutation:**\n    *   `Dear John,`: Retained, as it's standard and appropriate.\n\n3.  **Opening:**\n    *   `I hope this email finds you well.`: A polite and common professional opening.\n\n4.  **Clear Purpose and Intent:**\n    *   `I would like to schedule a brief meeting tomorrow...`: More professional and less demanding than \"I want to meet.\"\n    *   `to discuss the [Project Name] project.`: Clearly states the topic.\n    *   `I believe it would be beneficial to align on the current status and next steps.`: Adds a brief, professional reason for the meeting, showing the value of the discussion.\n\n5.  **Flexibility and Specificity for Scheduling:**\n    *   `tomorrow, [Insert Tomorrow's Date, e.g., Tuesday, October 26th]`: Adding the specific date avoids ambiguity.\n    *   `Please let me know what time works best for you tomorrow.`: Puts the ball in John's court politely.\n    *   `I am generally available [mention a broad availability window...]`: Offers helpful information without being overly rigid, making it easier for\n- **Result:** FAIL\n- **Evaluation:** The output successfully provided an improved email draft relevant to the test case. However, it failed to adhere to the strict instruction that the return should *only* contain the email draft, as it included an additional 'Key Improvements and Why' section.\n- **Reasoning:** The core purpose of improving the email was met, and the quality of the improved email itself is high. However, the explicit constraint 'the return should only contain email draft, nothing else only one email draft' was violated by the inclusion of the detailed explanation section. This makes the output non-compliant with the specified format requirements.\n\n**Test Case:** Too casual input\n- **Input:** improve this email: hi there, are you free to meet tomorrow?\n- **Expected Output:** N/A\n- **Actual Output:** Here's an improved version of your email draft, focusing on professionalism, clarity, and effectiveness:\n\n**Subject: Meeting Availability Tomorrow**\n\nHello [Recipient's Name],\n\nI hope this email finds you well.\n\nI'm writing to inquire if you might be available for a brief meeting tomorrow, [Date of Tomorrow, e.g., Wednesday, October 26th]. I'd like to discuss [brief topic, e.g., \"the project update,\" \"a quick question regarding X,\" or \"a follow-up on our last conversation\"].\n\nPlease let me know if you have any availability that works for you. If tomorrow doesn't suit, I'm happy to work around your schedule and find an alternative time later in the week.\n\nThank you for your time and consideration.\n\nBest regards,\n\n[Your Name]\n\n---\n\n**Why this is improved:**\n\n1.  **Professional Tone and Language:**\n    *   \"Hello [Recipient's Name],\" is a professional yet friendly salutation.\n    *   \"I hope this email finds you well\" is a polite opening.\n    *   \"I'm writing to inquire if you might be available\" is more formal and polite than \"are you free.\"\n    *   \"Thank you for your time and consideration\" and \"Best regards\" are standard professional closings.\n\n2.  **Clear and Concise Communication:**\n    *   **Subject Line:** Immediately tells the recipient the purpose of the email.\n    *   **Specific Request:** Clearly states the desire for a \"brief meeting tomorrow.\"\n    *   **Context/Purpose:** The placeholder `[brief topic]` encourages you to add a specific reason for the meeting, making it more efficient for the recipient to decide. If the context is already very clear (e.g., you just finished a call and this is a pre-arranged follow-up), you can omit it, but generally, it's good practice.\n    *   **Date Specificity:** Adding `[`\n- **Result:** FAIL\n- **Evaluation:** The test output successfully provided an improved email draft, which aligns with the implicit request to make a 'too casual input' more professional. However, it failed to adhere to the strict criterion that the output 'should only contain email draft, nothing else'. The additional 'Why this is improved' section, while helpful for understanding, violates this specific instruction.\n- **Reasoning:** The core issue is the inclusion of explanatory text ('Why this is improved') after the email draft. The evaluation target explicitly states that 'the return should only contain email draft, nothing else only one email draft'. This additional content causes the overall failure, despite the email draft itself being appropriate and well-formed.\n\n### Best Attempt (Attempt 1)\n**Status:** passed\n\n**Test Case:** Basic Email Improvement\n- **Input:** Can you help me improve this email: Dear John, I want to meet tomorrow to discuss the project. Thanks, Jane\n- **Expected Output:** N/A\n- **Actual Output:** Dear John,\n\nI would like to schedule a meeting tomorrow to discuss the project. Please let me know your availability.\n\nBest regards,\n\nJane\n- **Result:** PASS\n- **Evaluation:** The actual output fully meets all specified criteria for the 'email quality' target. It is a clean, single email draft, and directly addresses the 'Basic Email Improvement' test case by providing an email.\n- **Reasoning:** The output 'Dear John,...Jane' is a complete and singular email draft. It contains no additional text, boilerplate, or multiple drafts, thus satisfying the first criterion of 'only contain email draft, nothing else only one email draft'. As the Test Case is explicitly 'Basic Email Improvement', the output correctly provides an improved email draft, fulfilling the second criterion. The third criterion regarding 'I'm sorry, I can't help with that.' is not applicable as the input *was* about improving an email, and the output correctly did not return that phrase.\n\n**Test Case:** Too casual input\n- **Input:** improve this email: hi there, are you free to meet tomorrow?\n- **Expected Output:** N/A\n- **Actual Output:** Subject: Meeting Availability Tomorrow\n\nHello [Recipient Name],\n\nWould you be available to meet tomorrow to discuss [brief topic]? Please let me know your availability or if another time works better.\n\nBest regards,\n[Your Name]\n- **Result:** PASS\n- **Evaluation:** The test case successfully generated a professional email draft from what is described as a 'too casual input'. The output adheres to all specified criteria for 'email quality'. It contains only one email draft, with no additional text. Given the input implies the need for a more formal output (improving the casualness), the generated email serves as the appropriate 'improved' draft.\n- **Reasoning:** The output perfectly matches the expected format and content based on the provided target criteria. It is a single, clean email draft, directly addressing the implicit need to formalize or generate an email from a casual prompt.\n"})}),"\n",(0,s.jsx)(n.h2,{id:"branch-naming-convention",children:"Branch Naming Convention"}),"\n",(0,s.jsx)(n.p,{children:"Kaizen Agent creates branches with the following naming convention:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"kaizen-auto-fix-YYYY-MM-DD-HHMMSS\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"kaizen-auto-fix-2024-01-15-143022"})]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"1-review-prs-before-merging",children:"1. Review PRs Before Merging"}),"\n",(0,s.jsx)(n.p,{children:"Always review the generated pull requests before merging:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check the changes make sense"}),"\n",(0,s.jsx)(n.li,{children:"Verify test improvements are real"}),"\n",(0,s.jsx)(n.li,{children:"Ensure no unintended side effects"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-use-descriptive-commit-messages",children:"2. Use Descriptive Commit Messages"}),"\n",(0,s.jsx)(n.p,{children:"Kaizen Agent generates descriptive commit messages, but you can customize them:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Custom commit message\nkaizen test-all --config kaizen.yaml --auto-fix --create-pr --repo owner/repo-name --commit-message "Fix email agent prompt issues"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-set-up-branch-protection",children:"3. Set Up Branch Protection"}),"\n",(0,s.jsx)(n.p,{children:"Consider setting up branch protection rules:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Require pull request reviews"}),"\n",(0,s.jsx)(n.li,{children:"Require status checks to pass"}),"\n",(0,s.jsx)(n.li,{children:"Restrict direct pushes to main branch"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"4-monitor-pr-activity",children:"4. Monitor PR Activity"}),"\n",(0,s.jsx)(n.p,{children:"Regularly check for new pull requests:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set up notifications for new PRs"}),"\n",(0,s.jsx)(n.li,{children:"Review and merge promptly"}),"\n",(0,s.jsx)(n.li,{children:"Provide feedback on improvements"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.h4,{id:"1-token-permission-errors",children:"1. Token Permission Errors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u274c Error: Token does not have required permissions\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),": Ensure your token has the ",(0,s.jsx)(n.code,{children:"repo"})," scope enabled."]}),"\n",(0,s.jsx)(n.h4,{id:"2-repository-access-denied",children:"2. Repository Access Denied"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u274c Error: Cannot access repository\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify the repository exists and is accessible"}),"\n",(0,s.jsx)(n.li,{children:"Check your token has access to the repository"}),"\n",(0,s.jsxs)(n.li,{children:["Ensure you're using the correct repository format (",(0,s.jsx)(n.code,{children:"owner/repo-name"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"3-branch-creation-failed",children:"3. Branch Creation Failed"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u274c Error: Cannot create branch\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check if the branch name already exists"}),"\n",(0,s.jsx)(n.li,{children:"Verify you have write permissions to the repository"}),"\n",(0,s.jsx)(n.li,{children:"Ensure the base branch exists"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"4-pull-request-creation-failed",children:"4. Pull Request Creation Failed"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u274c Error: Cannot create pull request\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check if a PR already exists for the same changes"}),"\n",(0,s.jsx)(n.li,{children:"Verify the repository allows pull requests"}),"\n",(0,s.jsx)(n.li,{children:"Ensure the base branch is protected (if applicable)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,s.jsx)(n.p,{children:"Enable debug mode for detailed troubleshooting:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kaizen test-all --config kaizen.yaml --auto-fix --create-pr --repo owner/repo-name --debug\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,s.jsx)(n.p,{children:"If you continue to have issues:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Check the logs"}),": Review detailed logs in ",(0,s.jsx)(n.code,{children:"test-logs/"})," directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Run diagnostics"}),": Use ",(0,s.jsx)(n.code,{children:"kaizen diagnose-github-access"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Join Discord"}),": Get help from the community at ",(0,s.jsx)(n.a,{href:"https://discord.gg/2A5Genuh",children:"Discord"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Check GitHub status"}),": Ensure GitHub services are operational"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"token-security",children:"Token Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Never commit tokens"})," to version control"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use environment variables"})," or secure secret management"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rotate tokens regularly"})," (set appropriate expiration dates)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use minimal permissions"})," when possible"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"repository-security",children:"Repository Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Review all changes"})," before merging"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Set up branch protection"})," rules"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use code review"})," for all automated changes"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Monitor for unusual activity"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"integration-with-cicd",children:"Integration with CI/CD"}),"\n",(0,s.jsx)(n.p,{children:"You can integrate Kaizen Agent with your CI/CD pipeline:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# Example GitHub Actions workflow\nname: Kaizen Agent Testing\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Set up Python\n        uses: actions/setup-python@v4\n        with:\n          python-version: '3.9'\n      - name: Install Kaizen Agent\n        run: pip install kaizen-agent\n      - name: Run Kaizen tests\n        run: kaizen test-all --config kaizen.yaml --auto-fix --create-pr --repo ${{ github.repository }}\n        env:\n          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For more help with GitHub integration, see our ",(0,s.jsx)(n.a,{href:"/kaizen-agent/docs/faq",children:"FAQ"})," or join our ",(0,s.jsx)(n.a,{href:"https://discord.gg/2A5Genuh",children:"Discord community"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);