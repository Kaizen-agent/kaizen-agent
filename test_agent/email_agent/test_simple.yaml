name: Email Agent Core Test
agent_type: dynamic_region
file_path: email_agent.py
description: |
  Test suite for the EmailAgent class that handles email improvement using OpenAI's API.
  Tests cover initialization, error handling, and email improvement functionality.

metadata:
  version: 1.0.0
  dependencies:
    - google-generativeai>=0.1.0
    - python-dotenv>=0.19.0
  environment_variables:
    - GOOGLE_API_KEY

evaluation:
  llm_provider: gemini
  model: gemini-2.5-flash-preview-05-20
  criteria:
    - name: email quality
      description: |
        - the return should only contain email draft, nothing else only one email draft
        - if the input is about improving email, the output should be the improved email draft
        - if the input is not about improving email, the output should be "I'm sorry, I can't help with that."
      weight: 1

regions:
  - email_agent

steps:
  - name: Basic Email Improvement
    description: Test basic email improvement functionality
    input:
      file_path: email_agent.py
      region: email_agent
      method: run
      input: "Can you help me improve this email: Dear John, I want to meet tomorrow to discuss the project. Thanks, Jane"
    expected_output:
      type: "string"
      contains: ["Dear", "meeting", "project"]
    assertions:
      - type: "contains"
        value: "Dear"
      - type: "contains"
        value: "meeting"
      - type: "contains"
        value: "project"
    evaluation:
      type: llm

  - name: Non-Email Input
    description: Test handling of non-email input
    input:
      file_path: email_agent.py
      region: email_agent
      method: run
      input: "What's the weather like today?"
    expected_output:
      type: "string"
      exact: "I'm sorry, I can't help with that."
    assertions:
      - type: "equals"
        value: "I'm sorry, I can't help with that."
    evaluation:
      type: llm

  - name: Empty Input
    description: Test handling of empty input
    input:
      file_path: email_agent.py
      region: email_agent
      method: run
      input: ""
    expected_output:
      type: "string"
      exact: "I'm sorry, I can't help with that."
    assertions:
      - type: "equals"
        value: "I'm sorry, I can't help with that."
    evaluation:
      type: llm
