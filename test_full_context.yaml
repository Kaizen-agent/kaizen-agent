name: Advanced Data Processing Agent
agent_type: dynamic_region
file_path: agents/data_processor.py
description: |
  An advanced agent that processes and analyzes complex data structures.
  
  This agent can handle:
  - JSON data validation and transformation
  - CSV data parsing and cleaning
  - XML data extraction and conversion
  - Database query results processing
  - API response data formatting
  
  The agent provides intelligent data processing with error handling,
  data validation, and format conversion capabilities.

agent:
  module: agents.data_processor
  class: DataProcessorAgent
  method: process_data

evaluation:
  evaluation_targets:
    - name: processed_data
      source: return
      criteria: "The processed_data must be a valid data structure that matches the expected output format"
      description: "Evaluates the accuracy of data processing"
      weight: 0.4
    - name: error_handling
      source: return
      criteria: "The agent must handle errors gracefully and return appropriate error messages"
      description: "Checks if the agent handles errors properly"
      weight: 0.3
    - name: performance
      source: return
      criteria: "The processing time must be within acceptable limits for the data size"
      description: "Evaluates processing performance"
      weight: 0.3

regions:
  - data_processor
  - error_handler
  - validator

max_retries: 3

files_to_fix:
  - agents/data_processor.py
  - agents/error_handler.py
  - agents/validator.py

referenced_files:
  - utils/data_utils.py
  - config/processing_config.yaml

steps:
  - name: JSON data processing
    description: Process valid JSON data with nested structures
    input:
      file_path: agents/data_processor.py
      method: process_data
      input: 
        - name: data_type
          type: string
          value: "json"
        - name: input_data
          type: dict
          value:
            users:
              - name: "John Doe"
                age: 30
                email: "john@example.com"
              - name: "Jane Smith"
                age: 25
                email: "jane@example.com"
        - name: processing_options
          type: dict
          value:
            validate: true
            format: "pretty"
            include_metadata: false
      expected_output: 
        success: True
        processed_count: 2
        output_format: "json"

  - name: Invalid JSON handling
    description: Handle malformed JSON data gracefully
    input:
      file_path: agents/data_processor.py
      method: process_data
      input: 
        - name: data_type
          type: string
          value: "json"
        - name: input_data
          type: string
          value: '{"users": [{"name": "John", "age": 30,}, {"name": "Jane", "age": 25}]'
        - name: processing_options
          type: dict
          value:
            validate: true
            format: "compact"
            include_metadata: true
      expected_output: 
        success: False
        error: "Invalid JSON format"
        error_type: "parsing_error" 